# local image, containing the scheduler script
FROM scheduler

USER root 

WORKDIR /app

COPY requirements.txt requirements.txt

RUN pip3 install -r requirements.txt --no-cache-dir

RUN apt-get update && apt-get install -y procps

RUN useradd app --create-home --shell /bin/bash
# USER app

COPY . .

VOLUME /scrape_conf

ENV CACHE_TYPE=redis
ENV STORE_TYPE=mongodb
ENV NOTIFIER_TYPE=redis_streams
ENV SCRAPER_ARTICLE_LIMIT=2
ENV SCRAPER_PROCESSES=1
ENV SCRAPER_CONFIG_FILE=

# COPY <<EOF add_configs.sh 
#   #!/bin/bash 
#   e= 
#   for i in $(ls /scrape_conf) 
#   do 
#     echo "adding config $i to env var SCRAPER_CONFIG_FILE" 
#     e="\$e \$i" 
#   done 
#   export SCRAPER_CONFIG_FILE="\$e" 
# EOF
# RUN chmod +x add_configs.sh


# ENTRYPOINT . ./add_configs.sh



# COPY <<EOF schedule_conf.yaml
# jobs: 
# - cmd: |
#     cd /app && \
#     for i in $(ls /scrape_conf)
#     do
#       python src/main.py \\
#         -c /scrape_conf/\$i \\
#         --store mongodb \\
#         --cache redis \\
#         --notifier redis_streams \\
#         -l 2
#     done

#   schedule:
#   - every(1).minutes
# EOF

# ENTRYPOINT ["python3", "/scheduler/src/scheduler.py", "schedule_conf.yaml"]


COPY <<EOF schedule_conf.yaml
jobs: 
- cmd: cd /app && python src/main.py 
  schedule:
  - every(1).minutes
EOF

ENTRYPOINT ["python3", "/scheduler/src/scheduler.py", "schedule_conf.yaml"]
